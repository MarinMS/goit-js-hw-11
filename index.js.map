{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '48918931-19353ebecebc74a7aac5f0327';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchImages = searchQuery => {\n  return axios\n    .get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: searchQuery,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    })\n    .then(response => response.data.hits)\n    .catch(error => {\n      console.error('Error fetching images: ', error);\n      return [];\n    });\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet lightbox = new SimpleLightbox('.gallery a');\n\nexport const renderGallery = images => {\n  const gallery = document.querySelector('.gallery');\n  gallery.innerHTML = '';\n\n  if (images.length === 0) {\n    iziToast.error({\n      title: 'Error',\n      message:\n        'Sorry, there are no images matching your search query. Please try again!',\n      position: 'topRight',\n    });\n    return;\n  }\n\n  const markup = images\n    .map(\n      image => `\n    <div class=\"gallery-item\">\n      <a href=\"${image.largeImageURL}\">\n        <img src=\"${image.webformatURL}\" alt=\"${image.tags}\" />\n      </a>\n      <div class=\"info\">\n        <p>Likes<span>${image.likes}</span></p>\n        <p>Views <span>${image.views}</span></p>\n        <p>Comments<span>${image.comments}</span></p>\n        <p>Downloads<span>${image.downloads}</span></p>\n      </div>\n    </div>\n  `\n    )\n    .join('');\n\n  gallery.innerHTML = markup;\n  lightbox.refresh();\n};\n","import iziToast from 'izitoast';\nimport { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\n\nconst searchForm = document.querySelector('#search-form');\nconst searchInput = document.querySelector('#search-input');\nconst loader = document.querySelector('.loader');\n\nsearchForm.addEventListener('submit', event => {\n  event.preventDefault();\n  const query = searchInput.value.trim();\n\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search query.',\n    });\n    return;\n  }\n\n  loader.classList.remove('hidden');\n\n  fetchImages(query)\n    .then(images => {\n      renderGallery(images);\n    })\n    .finally(() => {\n      loader.classList.add('hidden');\n    });\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","searchQuery","axios","response","error","lightbox","SimpleLightbox","renderGallery","images","gallery","iziToast","markup","image","searchForm","searchInput","loader","event","query"],"mappings":"owBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAcC,GAClBC,EACJ,IAAIH,EAAU,CACb,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,EACA,KAAKE,GAAYA,EAAS,KAAK,IAAI,EACnC,MAAMC,IACL,QAAQ,MAAM,0BAA2BA,CAAK,EACvC,GACR,ECfL,IAAIC,EAAW,IAAIC,EAAe,YAAY,EAEvC,MAAMC,EAAgBC,GAAU,CACrC,MAAMC,EAAU,SAAS,cAAc,UAAU,EAGjD,GAFAA,EAAQ,UAAY,GAEhBD,EAAO,SAAW,EAAG,CACvBE,EAAS,MAAM,CACb,MAAO,QACP,QACE,2EACF,SAAU,UAChB,CAAK,EACD,MACD,CAED,MAAMC,EAASH,EACZ,IACCI,GAAS;AAAA;AAAA,iBAEEA,EAAM,aAAa;AAAA,oBAChBA,EAAM,YAAY,UAAUA,EAAM,IAAI;AAAA;AAAA;AAAA,wBAGlCA,EAAM,KAAK;AAAA,yBACVA,EAAM,KAAK;AAAA,2BACTA,EAAM,QAAQ;AAAA,4BACbA,EAAM,SAAS;AAAA;AAAA;AAAA,GAItC,EACA,KAAK,EAAE,EAEVH,EAAQ,UAAYE,EACpBN,EAAS,QAAO,CAClB,ECrCMQ,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAS,SAAS,cAAc,SAAS,EAE/CF,EAAW,iBAAiB,SAAUG,GAAS,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAQH,EAAY,MAAM,KAAI,EAEpC,GAAI,CAACG,EAAO,CACVP,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDK,EAAO,UAAU,OAAO,QAAQ,EAEhCf,EAAYiB,CAAK,EACd,KAAKT,GAAU,CACdD,EAAcC,CAAM,CAC1B,CAAK,EACA,QAAQ,IAAM,CACbO,EAAO,UAAU,IAAI,QAAQ,CACnC,CAAK,CACL,CAAC"}